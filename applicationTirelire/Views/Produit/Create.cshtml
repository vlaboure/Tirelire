@model applicationTirelire.Models.Produit

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
        @************FormMethod.Post,new {enctype="multipart/form-data"}-->enctype-- pour gérer les fichiers*@ 
@using (Html.BeginForm("Create", "Produit", FormMethod.Post, new { enctype = "multipart/form-data" }))

{     /*  *****Jeton anti contrefaçon AntiForgeryToken*/
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Produit</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    <div class="form-group">
        @Html.LabelFor(model => model.Idcategorie, "Categorie", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdCategorie", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Idcategorie, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nomProd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nomProd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nomProd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrixProd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrixProd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrixProd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UrlImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            <span><input asp-for="model.UrlImage" type="file" id="fichier" name="fichier" /></span>
            @*@Html.EditorFor(model => model.UrlImage, new { htmlAttributes = new { @class = "form-control",type="file" } })*@
            @Html.ValidationMessageFor(model => model.UrlImage, "", new { @class = "text-danger" })
            <img class="photo-index-card-img" src="@Url.Content("#img")" width="50" />
        </div>
        <div class="col-md-5">

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.couleur, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.couleur, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.couleur, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.capacite, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.capacite, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.capacite, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.poids, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.poids, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.poids, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.longeur, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.longeur, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.longeur, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.largeur, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.largeur, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.largeur, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.hauteur, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.hauteur, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.hauteur, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdFourn, "Fournisseur", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IdFourn", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdFourn, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.descriptionProd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descriptionProd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descriptionProd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
